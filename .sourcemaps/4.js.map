{"version":3,"sources":["../../src/pages/settings/settings.module.ts","../../src/pages/settings/settings.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACa;AACN;AAEN;AAc1C;IAAA;IAAkC,CAAC;IAAtB,kBAAkB;QAZ9B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,+DAAY;aACb;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,+DAAY,CAAC;gBACtC,4EAAe,CAAC,QAAQ,EAAE;aAC3B;YACD,OAAO,EAAE;gBACP,+DAAY;aACb;SACF,CAAC;OACW,kBAAkB,CAAI;IAAD,yBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBW;AACc;AACD;AACE;AACP;AACT;AACY;AAE2B;AAEhF;;;;GAIG;AAMH;IAIE,sBAAmB,OAAsB,EAChC,QAAkB,EAClB,WAAwB,EACxB,SAAoB,EACpB,SAA2B,EAC3B,IAAwB,EACxB,IAAe,EACf,OAAe;QAPL,YAAO,GAAP,OAAO,CAAe;QAChC,aAAQ,GAAR,QAAQ,CAAU;QAClB,gBAAW,GAAX,WAAW,CAAa;QACxB,cAAS,GAAT,SAAS,CAAW;QACpB,cAAS,GAAT,SAAS,CAAkB;QAC3B,SAAI,GAAJ,IAAI,CAAoB;QACxB,SAAI,GAAJ,IAAI,CAAW;QACf,YAAO,GAAP,OAAO,CAAQ;QAVxB,4BAA4B;QAC3B,YAAO,GAAC,EAAE,CAAC;IAUZ,CAAC;IACD,qCAAc,GAAd;QAAA,iBAYC;QAXC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,cAAI;YACjC,IAAI,MAAM,GAAG;gBACX,KAAK,EAAC,IAAI;gBACV,OAAO,EAAC,KAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;aACpC,CAAC;YACF,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,2CAA2C,EAAC,MAAM,CAAC,CAAC,SAAS,CAAC,gBAAM;gBACjF,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;gBACjC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAC,KAAI,CAAC,OAAO,CAAC,CAAC;YACtC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6BAAM,GAAN;QAAA,iBAQC;QAPC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,iBAAO;YAClC,EAAE,EAAC,OAAO,CAAC,EAAC;gBACV,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YACpC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;YACrC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4BAAK,GAAL;QACE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;IAvCU,YAAY;QAJxB,wEAAS,CAAC;YACT,QAAQ,EAAE,eAAe;WACG;SAC7B,CAAC;mFAKyC;YACtB,mEAAQ;YACL,iEAAW;YACb,6EAAS;YACT,iGAAgB;YACtB,yEAAmB;YACnB,iEAAU;YACP,OAAO;OAXb,YAAY,CAyCxB;IAAD,CAAC;AAAA;SAzCY,YAAY,e","file":"4.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\n\r\nimport { SettingsPage } from './settings';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SettingsPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(SettingsPage),\r\n    TranslateModule.forChild()\r\n  ],\r\n  exports: [\r\n    SettingsPage\r\n  ]\r\n})\r\nexport class SettingsPageModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.module.ts","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Storage } from '@ionic/storage';\r\nimport { Settings } from '../../providers/providers';\r\n\r\nimport { AuthServiceProvider } from '../../providers/auth-service/auth-service';\r\n\r\n/**\r\n * The Settings page is a simple form that syncs with a Settings provider\r\n * to enable the user to customize settings for the app.\r\n *\r\n */\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-settings',\r\n  templateUrl: 'settings.html'\r\n})\r\nexport class SettingsPage {\r\n  // Our local settings object\r\n   biodata={};\r\n\r\n  constructor(public navCtrl: NavController,\r\n    public settings: Settings,\r\n    public formBuilder: FormBuilder,\r\n    public navParams: NavParams,\r\n    public translate: TranslateService,\r\n    public auth:AuthServiceProvider,\r\n    public http:HttpClient,\r\n    public storage:Storage) {\r\n  }\r\n  ionViewDidLoad(){\r\n    console.log(this.auth.currentUser);\r\n    this.storage.get('token').then(data=>{\r\n      let access = {\r\n        token:data,\r\n        user_id:this.auth.currentUser[\"id\"]\r\n      };\r\n      this.http.post('http://gosport.arazwam.com/api/getBiodata',access).subscribe(result=>{\r\n        this.biodata = result[\"biodata\"];\r\n        console.log(\"biodata\",this.biodata);\r\n      });\r\n    });\r\n  }\r\n\r\n  logout(){\r\n    this.auth.logout().subscribe(allowed=>{\r\n      if(allowed){\r\n        this.navCtrl.push('TutorialPage');\r\n      } else {\r\n        this.auth.showError(\"cant logout\");\r\n      }\r\n    });\r\n  }\r\n\r\n  debug(){\r\n    this.auth.debug();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.ts"],"sourceRoot":""}